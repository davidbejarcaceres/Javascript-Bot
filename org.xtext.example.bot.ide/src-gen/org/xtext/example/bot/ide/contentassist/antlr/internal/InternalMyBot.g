/*
 * generated by Xtext 2.17.1
 */
grammar InternalMyBot;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.bot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.bot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.bot.services.MyBotGrammarAccess;

}
@parser::members {
	private MyBotGrammarAccess grammarAccess;

	public void setGrammarAccess(MyBotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBot
entryRuleBot
:
{ before(grammarAccess.getBotRule()); }
	 ruleBot
{ after(grammarAccess.getBotRule()); } 
	 EOF 
;

// Rule Bot
ruleBot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBotAccess().getGroup()); }
		(rule__Bot__Group__0)
		{ after(grammarAccess.getBotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShows
entryRuleShows
:
{ before(grammarAccess.getShowsRule()); }
	 ruleShows
{ after(grammarAccess.getShowsRule()); } 
	 EOF 
;

// Rule Shows
ruleShows 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowsAccess().getGroup()); }
		(rule__Shows__Group__0)
		{ after(grammarAccess.getShowsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShowType
entryRuleShowType
:
{ before(grammarAccess.getShowTypeRule()); }
	 ruleShowType
{ after(grammarAccess.getShowTypeRule()); } 
	 EOF 
;

// Rule ShowType
ruleShowType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowTypeAccess().getNameAssignment()); }
		(rule__ShowType__NameAssignment)
		{ after(grammarAccess.getShowTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenre
entryRuleGenre
:
{ before(grammarAccess.getGenreRule()); }
	 ruleGenre
{ after(grammarAccess.getGenreRule()); } 
	 EOF 
;

// Rule Genre
ruleGenre 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenreAccess().getNameAssignment()); }
		(rule__Genre__NameAssignment)
		{ after(grammarAccess.getGenreAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguage
entryRuleLanguage
:
{ before(grammarAccess.getLanguageRule()); }
	 ruleLanguage
{ after(grammarAccess.getLanguageRule()); } 
	 EOF 
;

// Rule Language
ruleLanguage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageAccess().getNameAssignment()); }
		(rule__Language__NameAssignment)
		{ after(grammarAccess.getLanguageAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTitleAccess().getNameAssignment()); }
		(rule__Title__NameAssignment)
		{ after(grammarAccess.getTitleAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionSay
entryRuleActionSay
:
{ before(grammarAccess.getActionSayRule()); }
	 ruleActionSay
{ after(grammarAccess.getActionSayRule()); } 
	 EOF 
;

// Rule ActionSay
ruleActionSay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionSayAccess().getGroup()); }
		(rule__ActionSay__Group__0)
		{ after(grammarAccess.getActionSayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionAsk
entryRuleActionAsk
:
{ before(grammarAccess.getActionAskRule()); }
	 ruleActionAsk
{ after(grammarAccess.getActionAskRule()); } 
	 EOF 
;

// Rule ActionAsk
ruleActionAsk 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAskAccess().getGroup()); }
		(rule__ActionAsk__Group__0)
		{ after(grammarAccess.getActionAskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionRecommend
entryRuleActionRecommend
:
{ before(grammarAccess.getActionRecommendRule()); }
	 ruleActionRecommend
{ after(grammarAccess.getActionRecommendRule()); } 
	 EOF 
;

// Rule ActionRecommend
ruleActionRecommend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionRecommendAccess().getGroup()); }
		(rule__ActionRecommend__Group__0)
		{ after(grammarAccess.getActionRecommendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getNameAssignment()); }
		(rule__Text__NameAssignment)
		{ after(grammarAccess.getTextAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAskVariable
entryRuleAskVariable
:
{ before(grammarAccess.getAskVariableRule()); }
	 ruleAskVariable
{ after(grammarAccess.getAskVariableRule()); } 
	 EOF 
;

// Rule AskVariable
ruleAskVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAskVariableAccess().getNameAssignment()); }
		(rule__AskVariable__NameAssignment)
		{ after(grammarAccess.getAskVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAskRecommend
entryRuleAskRecommend
:
{ before(grammarAccess.getAskRecommendRule()); }
	 ruleAskRecommend
{ after(grammarAccess.getAskRecommendRule()); } 
	 EOF 
;

// Rule AskRecommend
ruleAskRecommend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAskRecommendAccess().getNameAssignment()); }
		(rule__AskRecommend__NameAssignment)
		{ after(grammarAccess.getAskRecommendAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__0__Impl
	rule__Bot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getBotAction_0()); }
	()
	{ after(grammarAccess.getBotAccess().getBotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__1__Impl
	rule__Bot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getStartBotKeyword_1()); }
	'StartBot'
	{ after(grammarAccess.getBotAccess().getStartBotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__2__Impl
	rule__Bot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getShowsAssignment_2()); }
	(rule__Bot__ShowsAssignment_2)*
	{ after(grammarAccess.getBotAccess().getShowsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__3__Impl
	rule__Bot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getStateAssignment_3()); }
	(rule__Bot__StateAssignment_3)*
	{ after(grammarAccess.getBotAccess().getStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getEndBotKeyword_4()); }
	'EndBot'
	{ after(grammarAccess.getBotAccess().getEndBotKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shows__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__0__Impl
	rule__Shows__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getShowKeyword_0()); }
	'Show'
	{ after(grammarAccess.getShowsAccess().getShowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__1__Impl
	rule__Shows__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getShowTypeKeyword_1()); }
	'ShowType'
	{ after(grammarAccess.getShowsAccess().getShowTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__2__Impl
	rule__Shows__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getShowTypeAssignment_2()); }
	(rule__Shows__ShowTypeAssignment_2)
	{ after(grammarAccess.getShowsAccess().getShowTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__3__Impl
	rule__Shows__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getGenreKeyword_3()); }
	'Genre'
	{ after(grammarAccess.getShowsAccess().getGenreKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__4__Impl
	rule__Shows__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getGenreAssignment_4()); }
	(rule__Shows__GenreAssignment_4)
	{ after(grammarAccess.getShowsAccess().getGenreAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__5__Impl
	rule__Shows__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getLanguageKeyword_5()); }
	'Language'
	{ after(grammarAccess.getShowsAccess().getLanguageKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__6__Impl
	rule__Shows__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getLanguageAssignment_6()); }
	(rule__Shows__LanguageAssignment_6)
	{ after(grammarAccess.getShowsAccess().getLanguageAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__7__Impl
	rule__Shows__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getTitleKeyword_7()); }
	'Title'
	{ after(grammarAccess.getShowsAccess().getTitleKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__8__Impl
	rule__Shows__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getTitleAssignment_8()); }
	(rule__Shows__TitleAssignment_8)
	{ after(grammarAccess.getShowsAccess().getTitleAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shows__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowsAccess().getEndShowKeyword_9()); }
	'EndShow'
	{ after(grammarAccess.getShowsAccess().getEndShowKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }
	'State'
	{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionSayAssignment_2()); }
	(rule__State__ActionSayAssignment_2)
	{ after(grammarAccess.getStateAccess().getActionSayAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionAskAssignment_3()); }
	(rule__State__ActionAskAssignment_3)?
	{ after(grammarAccess.getStateAccess().getActionAskAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionRecommendAssignment_4()); }
	(rule__State__ActionRecommendAssignment_4)?
	{ after(grammarAccess.getStateAccess().getActionRecommendAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getEndStateKeyword_5()); }
	'EndState'
	{ after(grammarAccess.getStateAccess().getEndStateKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSay__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSay__Group__0__Impl
	rule__ActionSay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSay__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSayAccess().getSayKeyword_0()); }
	'Say'
	{ after(grammarAccess.getActionSayAccess().getSayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSay__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSay__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSay__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSayAccess().getTextAssignment_1()); }
	(rule__ActionSay__TextAssignment_1)
	{ after(grammarAccess.getActionSayAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionAsk__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionAsk__Group__0__Impl
	rule__ActionAsk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAskAccess().getAskKeyword_0()); }
	'Ask'
	{ after(grammarAccess.getActionAskAccess().getAskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionAsk__Group__1__Impl
	rule__ActionAsk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAskAccess().getTextAssignment_1()); }
	(rule__ActionAsk__TextAssignment_1)
	{ after(grammarAccess.getActionAskAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionAsk__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAskAccess().getAskVariableAssignment_2()); }
	(rule__ActionAsk__AskVariableAssignment_2)
	{ after(grammarAccess.getActionAskAccess().getAskVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionRecommend__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRecommend__Group__0__Impl
	rule__ActionRecommend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRecommendAccess().getRecommendKeyword_0()); }
	'Recommend'
	{ after(grammarAccess.getActionRecommendAccess().getRecommendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRecommend__Group__1__Impl
	rule__ActionRecommend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRecommendAccess().getTextAssignment_1()); }
	(rule__ActionRecommend__TextAssignment_1)
	{ after(grammarAccess.getActionRecommendAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRecommend__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRecommendAccess().getAskRecommendAssignment_2()); }
	(rule__ActionRecommend__AskRecommendAssignment_2)*
	{ after(grammarAccess.getActionRecommendAccess().getAskRecommendAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bot__ShowsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBotAccess().getShowsShowsParserRuleCall_2_0()); }
		ruleShows
		{ after(grammarAccess.getBotAccess().getShowsShowsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__StateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBotAccess().getStateStateParserRuleCall_3_0()); }
		ruleState
		{ after(grammarAccess.getBotAccess().getStateStateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__ShowTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowsAccess().getShowTypeShowTypeParserRuleCall_2_0()); }
		ruleShowType
		{ after(grammarAccess.getShowsAccess().getShowTypeShowTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__GenreAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowsAccess().getGenreGenreParserRuleCall_4_0()); }
		ruleGenre
		{ after(grammarAccess.getShowsAccess().getGenreGenreParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__LanguageAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowsAccess().getLanguageLanguageParserRuleCall_6_0()); }
		ruleLanguage
		{ after(grammarAccess.getShowsAccess().getLanguageLanguageParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shows__TitleAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowsAccess().getTitleTitleParserRuleCall_8_0()); }
		ruleTitle
		{ after(grammarAccess.getShowsAccess().getTitleTitleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getShowTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Genre__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenreAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getGenreAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getNameTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getTitleAccess().getNameTextParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionSayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionSayActionSayParserRuleCall_2_0()); }
		ruleActionSay
		{ after(grammarAccess.getStateAccess().getActionSayActionSayParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionAskAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionAskActionAskParserRuleCall_3_0()); }
		ruleActionAsk
		{ after(grammarAccess.getStateAccess().getActionAskActionAskParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionRecommendAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionRecommendActionRecommendParserRuleCall_4_0()); }
		ruleActionRecommend
		{ after(grammarAccess.getStateAccess().getActionRecommendActionRecommendParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSay__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSayAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getActionSayAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAskAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getActionAskAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionAsk__AskVariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAskAccess().getAskVariableAskVariableParserRuleCall_2_0()); }
		ruleAskVariable
		{ after(grammarAccess.getActionAskAccess().getAskVariableAskVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRecommendAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getActionRecommendAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRecommend__AskRecommendAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRecommendAccess().getAskRecommendAskRecommendParserRuleCall_2_0()); }
		ruleAskRecommend
		{ after(grammarAccess.getActionRecommendAccess().getAskRecommendAskRecommendParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AskVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAskVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAskVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AskRecommend__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAskRecommendAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAskRecommendAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
