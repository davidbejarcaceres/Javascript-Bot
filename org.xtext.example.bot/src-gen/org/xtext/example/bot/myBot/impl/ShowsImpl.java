/**
 * generated by Xtext 2.17.1
 */
package org.xtext.example.bot.myBot.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.bot.myBot.Genre;
import org.xtext.example.bot.myBot.Language;
import org.xtext.example.bot.myBot.MyBotPackage;
import org.xtext.example.bot.myBot.ShowType;
import org.xtext.example.bot.myBot.Shows;
import org.xtext.example.bot.myBot.Title;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Shows</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.bot.myBot.impl.ShowsImpl#getShowType <em>Show Type</em>}</li>
 *   <li>{@link org.xtext.example.bot.myBot.impl.ShowsImpl#getGenre <em>Genre</em>}</li>
 *   <li>{@link org.xtext.example.bot.myBot.impl.ShowsImpl#getLanguage <em>Language</em>}</li>
 *   <li>{@link org.xtext.example.bot.myBot.impl.ShowsImpl#getTitle <em>Title</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShowsImpl extends MinimalEObjectImpl.Container implements Shows
{
  /**
   * The cached value of the '{@link #getShowType() <em>Show Type</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShowType()
   * @generated
   * @ordered
   */
  protected EList<ShowType> showType;

  /**
   * The cached value of the '{@link #getGenre() <em>Genre</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGenre()
   * @generated
   * @ordered
   */
  protected EList<Genre> genre;

  /**
   * The cached value of the '{@link #getLanguage() <em>Language</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguage()
   * @generated
   * @ordered
   */
  protected EList<Language> language;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected EList<Title> title;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ShowsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyBotPackage.Literals.SHOWS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ShowType> getShowType()
  {
    if (showType == null)
    {
      showType = new EObjectContainmentEList<ShowType>(ShowType.class, this, MyBotPackage.SHOWS__SHOW_TYPE);
    }
    return showType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Genre> getGenre()
  {
    if (genre == null)
    {
      genre = new EObjectContainmentEList<Genre>(Genre.class, this, MyBotPackage.SHOWS__GENRE);
    }
    return genre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Language> getLanguage()
  {
    if (language == null)
    {
      language = new EObjectContainmentEList<Language>(Language.class, this, MyBotPackage.SHOWS__LANGUAGE);
    }
    return language;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Title> getTitle()
  {
    if (title == null)
    {
      title = new EObjectContainmentEList<Title>(Title.class, this, MyBotPackage.SHOWS__TITLE);
    }
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyBotPackage.SHOWS__SHOW_TYPE:
        return ((InternalEList<?>)getShowType()).basicRemove(otherEnd, msgs);
      case MyBotPackage.SHOWS__GENRE:
        return ((InternalEList<?>)getGenre()).basicRemove(otherEnd, msgs);
      case MyBotPackage.SHOWS__LANGUAGE:
        return ((InternalEList<?>)getLanguage()).basicRemove(otherEnd, msgs);
      case MyBotPackage.SHOWS__TITLE:
        return ((InternalEList<?>)getTitle()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyBotPackage.SHOWS__SHOW_TYPE:
        return getShowType();
      case MyBotPackage.SHOWS__GENRE:
        return getGenre();
      case MyBotPackage.SHOWS__LANGUAGE:
        return getLanguage();
      case MyBotPackage.SHOWS__TITLE:
        return getTitle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyBotPackage.SHOWS__SHOW_TYPE:
        getShowType().clear();
        getShowType().addAll((Collection<? extends ShowType>)newValue);
        return;
      case MyBotPackage.SHOWS__GENRE:
        getGenre().clear();
        getGenre().addAll((Collection<? extends Genre>)newValue);
        return;
      case MyBotPackage.SHOWS__LANGUAGE:
        getLanguage().clear();
        getLanguage().addAll((Collection<? extends Language>)newValue);
        return;
      case MyBotPackage.SHOWS__TITLE:
        getTitle().clear();
        getTitle().addAll((Collection<? extends Title>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyBotPackage.SHOWS__SHOW_TYPE:
        getShowType().clear();
        return;
      case MyBotPackage.SHOWS__GENRE:
        getGenre().clear();
        return;
      case MyBotPackage.SHOWS__LANGUAGE:
        getLanguage().clear();
        return;
      case MyBotPackage.SHOWS__TITLE:
        getTitle().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyBotPackage.SHOWS__SHOW_TYPE:
        return showType != null && !showType.isEmpty();
      case MyBotPackage.SHOWS__GENRE:
        return genre != null && !genre.isEmpty();
      case MyBotPackage.SHOWS__LANGUAGE:
        return language != null && !language.isEmpty();
      case MyBotPackage.SHOWS__TITLE:
        return title != null && !title.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ShowsImpl
